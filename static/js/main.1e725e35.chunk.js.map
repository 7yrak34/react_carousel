{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","imageSize","numberOfVisible","step","animationDuration","isInfinite","totalImages","length","positions","map","_image","i","slice","useState","positionIndex","setPositionIndex","currentPossition","className","style","width","transform","transition","image","src","alt","String","indexOf","type","cn","onClick","newPositionIndex","App","state","itemWidth","frameSize","infinite","event","this","setState","target","value","checked","action","method","htmlFor","name","id","onChange","handleItemWidthChange","handleFrameSizeChange","handleStepChange","handleDurationChange","handleInfiniteChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e725e35.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\nimport cn from 'classnames';\n\ninterface Props {\n  images: string[];\n  imageSize: number;\n  numberOfVisible: number;\n  step: number;\n  animationDuration: number;\n  isInfinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  imageSize,\n  numberOfVisible,\n  step,\n  animationDuration,\n  isInfinite,\n}) => {\n  const totalImages = images.length;\n\n  const positions = images\n    .map((_image, i) => -imageSize * (i))\n    .slice(0, totalImages - numberOfVisible + 1);\n\n  const [\n    positionIndex,\n    setPositionIndex,\n  ] = useState(0);\n\n  const currentPossition = positions[positionIndex];\n\n  function handleNextClick() {\n    if (positionIndex !== positions.length - 1) {\n      const newPositionIndex = positionIndex + step > positions.length - 1\n        ? positions.length - 1\n        : positionIndex + step;\n\n      setPositionIndex(newPositionIndex);\n    } else if (isInfinite) {\n      setPositionIndex(0);\n    }\n  }\n\n  function handlePrevClick() {\n    if (positionIndex !== 0) {\n      const newPositionIndex = positionIndex - step < 0\n        ? 0\n        : positionIndex - step;\n\n      setPositionIndex(newPositionIndex);\n    } else if (isInfinite) {\n      setPositionIndex(positions.length - 1);\n    }\n  }\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__wrapper\"\n        style={{\n          width: `${imageSize * numberOfVisible}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${imageSize * images.length}px`,\n            transform: `translateX(${currentPossition}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, i) => (\n            <li\n              key={images.indexOf(image)}\n            >\n              <img\n                src={image}\n                alt={String(i)}\n                style={{\n                  width: `${imageSize}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'button--prev', {\n            'button--prev-disabled':\n            positionIndex === 0 && !isInfinite,\n          })}\n          onClick={handlePrevClick}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className={cn('button', 'button--next', {\n            'button--next-disabled':\n            positionIndex === positions.length - 1 && !isInfinite,\n          })}\n          onClick={handleNextClick}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nexport interface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleItemWidthChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ itemWidth: +event.target.value });\n  }\n\n  handleFrameSizeChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ frameSize: +event.target.value });\n  }\n\n  handleStepChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ step: +event.target.value });\n  }\n\n  handleDurationChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ animationDuration: +event.target.value });\n  }\n\n  handleInfiniteChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ infinite: event.target.checked });\n  }\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        {/* eslint-disable-next-line */}\n        <h1 className=\"title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form\n          className=\"settings\"\n          action=\"#\"\n          method=\"get\"\n        >\n          <label className=\"settings__title\" htmlFor=\"itemId\">\n            Image size:\n            <input\n              className=\"settings__input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"itemId\"\n              step={10}\n              value={itemWidth}\n              onChange={(event) => this.handleItemWidthChange(event)}\n            />\n          </label>\n\n          <label className=\"settings__title\" htmlFor=\"frameId\">\n            Frame size:\n            <input\n              className=\"settings__input\"\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameId\"\n              value={frameSize}\n              step={1}\n              onChange={(event) => this.handleFrameSizeChange(event)}\n            />\n          </label>\n\n          <label className=\"settings__title\" htmlFor=\"stepId\">\n            Step:\n            <input\n              className=\"settings__input\"\n              type=\"number\"\n              name=\"step\"\n              id=\"stepId\"\n              step={1}\n              value={step}\n              onChange={(event) => this.handleStepChange(event)}\n            />\n          </label>\n\n          <label className=\"settings__title\" htmlFor=\"animationDuration\">\n            Animation Duration:\n            <input\n              className=\"settings__input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              value={animationDuration}\n              step={100}\n              onChange={(event) => this.handleDurationChange(event)}\n            />\n          </label>\n\n          <label className=\"settings__title\" htmlFor=\"isInfinite\">\n            Infinite:\n            <input\n              className=\"settings__checkbox\"\n              type=\"checkbox\"\n              name=\"isInfinite\"\n              id=\"isInfinite\"\n              onChange={(event) => this.handleInfiniteChange(event)}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          imageSize={itemWidth}\n          numberOfVisible={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          isInfinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}